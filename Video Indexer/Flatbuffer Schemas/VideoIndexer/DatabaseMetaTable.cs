// automatically generated by the FlatBuffers compiler, do not modify

namespace VideoIndexer
{

    using FlatBuffers;

    public sealed class DatabaseMetaTable : Table
    {
        public static DatabaseMetaTable GetRootAsDatabaseMetaTable(ByteBuffer _bb) { return GetRootAsDatabaseMetaTable(_bb, new DatabaseMetaTable()); }
        public static DatabaseMetaTable GetRootAsDatabaseMetaTable(ByteBuffer _bb, DatabaseMetaTable obj) { return (obj.__init(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
        public DatabaseMetaTable __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; return this; }

        public DatabaseMetaTableEntry GetDatabaseMetaTableEntries(int j) { return GetDatabaseMetaTableEntries(new DatabaseMetaTableEntry(), j); }
        public DatabaseMetaTableEntry GetDatabaseMetaTableEntries(DatabaseMetaTableEntry obj, int j) { int o = __offset(4); return o != 0 ? obj.__init(__indirect(__vector(o) + j * 4), bb) : null; }
        public int DatabaseMetaTableEntriesLength { get { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; } }

        public static Offset<DatabaseMetaTable> CreateDatabaseMetaTable(FlatBufferBuilder builder,
            VectorOffset databaseMetaTableEntriesOffset = default(VectorOffset))
        {
            builder.StartObject(1);
            DatabaseMetaTable.AddDatabaseMetaTableEntries(builder, databaseMetaTableEntriesOffset);
            return DatabaseMetaTable.EndDatabaseMetaTable(builder);
        }

        public static void StartDatabaseMetaTable(FlatBufferBuilder builder) { builder.StartObject(1); }
        public static void AddDatabaseMetaTableEntries(FlatBufferBuilder builder, VectorOffset databaseMetaTableEntriesOffset) { builder.AddOffset(0, databaseMetaTableEntriesOffset.Value, 0); }
        public static VectorOffset CreateDatabaseMetaTableEntriesVector(FlatBufferBuilder builder, Offset<DatabaseMetaTableEntry>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
        public static void StartDatabaseMetaTableEntriesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
        public static Offset<DatabaseMetaTable> EndDatabaseMetaTable(FlatBufferBuilder builder)
        {
            int o = builder.EndObject();
            return new Offset<DatabaseMetaTable>(o);
        }
        public static void FinishDatabaseMetaTableBuffer(FlatBufferBuilder builder, Offset<DatabaseMetaTable> offset) { builder.Finish(offset.Value); }
    };


}
