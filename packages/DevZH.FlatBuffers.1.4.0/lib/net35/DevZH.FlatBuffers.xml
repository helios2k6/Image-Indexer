<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevZH.FlatBuffers</name>
    </assembly>
    <members>
        <member name="T:FlatBuffers.ByteBuffer">
            <summary>
            Class to mimic Java's ByteBuffer which is used heavily in Flatbuffers.
            If your execution environment allows unsafe code, you should enable
            unsafe code in your project and #define UNSAFE_BYTEBUFFER to use a
            MUCH faster version of ByteBuffer.
            </summary>
        </member>
        <member name="T:FlatBuffers.FlatBufferBuilder">
            <summary>
            Responsible for building up and accessing a FlatBuffer formatted byte
            array (via ByteBuffer).
            </summary>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.#ctor(System.Int32)">
            <summary>
            Create a FlatBufferBuilder with a given initial size.
            </summary>
            <param name="initialSize">
            The initial size to use for the internal buffer.
            </param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.Clear">
            <summary>
            Reset the FlatBufferBuilder by purging all data that it holds.
            </summary>
        </member>
        <member name="P:FlatBuffers.FlatBufferBuilder.ForceDefaults">
             <summary>
             Gets and sets a Boolean to disable the optimization when serializing
             default values to a Table.
            
             In order to save space, fields that are set to their default value
             don't get serialized into the buffer.
             </summary>
        </member>
        <member name="P:FlatBuffers.FlatBufferBuilder.Offset">
            @cond FLATBUFFERS_INTERNAL
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddBool(System.Boolean)">
            @endcond
            <summary>
            Add a `bool` to the buffer (aligns the data and grows if necessary).
            </summary>
            <param name="x">The `bool` to add to the buffer.</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddSbyte(System.SByte)">
            <summary>
            Add a `sbyte` to the buffer (aligns the data and grows if necessary).
            </summary>
            <param name="x">The `sbyte` to add to the buffer.</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddByte(System.Byte)">
            <summary>
            Add a `byte` to the buffer (aligns the data and grows if necessary).
            </summary>
            <param name="x">The `byte` to add to the buffer.</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddShort(System.Int16)">
            <summary>
            Add a `short` to the buffer (aligns the data and grows if necessary).
            </summary>
            <param name="x">The `short` to add to the buffer.</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddUshort(System.UInt16)">
            <summary>
            Add an `ushort` to the buffer (aligns the data and grows if necessary).
            </summary>
            <param name="x">The `ushort` to add to the buffer.</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddInt(System.Int32)">
            <summary>
            Add an `int` to the buffer (aligns the data and grows if necessary).
            </summary>
            <param name="x">The `int` to add to the buffer.</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddUint(System.UInt32)">
            <summary>
            Add an `uint` to the buffer (aligns the data and grows if necessary).
            </summary>
            <param name="x">The `uint` to add to the buffer.</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddLong(System.Int64)">
            <summary>
            Add a `long` to the buffer (aligns the data and grows if necessary).
            </summary>
            <param name="x">The `long` to add to the buffer.</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddUlong(System.UInt64)">
            <summary>
            Add an `ulong` to the buffer (aligns the data and grows if necessary).
            </summary>
            <param name="x">The `ulong` to add to the buffer.</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddFloat(System.Single)">
            <summary>
            Add a `float` to the buffer (aligns the data and grows if necessary).
            </summary>
            <param name="x">The `float` to add to the buffer.</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddDouble(System.Double)">
            <summary>
            Add a `double` to the buffer (aligns the data and grows if necessary).
            </summary>
            <param name="x">The `double` to add to the buffer.</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddOffset(System.Int32)">
            <summary>
            Adds an offset, relative to where it will be written.
            </summary>
            <param name="off">The offset to add to the buffer.</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.StartVector(System.Int32,System.Int32,System.Int32)">
            @cond FLATBUFFERS_INTERNAL
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.EndVector">
            @endcond
            <summary>
            Writes data necessary to finish a vector construction.
            </summary>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.Nested(System.Int32)">
            @cond FLATBUFFERS_INTENRAL
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddBool(System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Adds a Boolean to the Table at index `o` in its vtable using the value `x` and default `d`
            </summary>
            <param name="o">The index into the vtable</param>
            <param name="x">The value to put into the buffer. If the value is equal to the default
            and <see cref="P:FlatBuffers.FlatBufferBuilder.ForceDefaults"/> is false, the value will be skipped.</param>
            <param name="d">The default value to compare the value against</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddSbyte(System.Int32,System.SByte,System.SByte)">
            <summary>
            Adds a SByte to the Table at index `o` in its vtable using the value `x` and default `d`
            </summary>
            <param name="o">The index into the vtable</param>
            <param name="x">The value to put into the buffer. If the value is equal to the default
            and <see cref="P:FlatBuffers.FlatBufferBuilder.ForceDefaults"/> is false, the value will be skipped.</param>
            <param name="d">The default value to compare the value against</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddByte(System.Int32,System.Byte,System.Byte)">
            <summary>
            Adds a Byte to the Table at index `o` in its vtable using the value `x` and default `d`
            </summary>
            <param name="o">The index into the vtable</param>
            <param name="x">The value to put into the buffer. If the value is equal to the default
            and <see cref="P:FlatBuffers.FlatBufferBuilder.ForceDefaults"/> is false, the value will be skipped.</param>
            <param name="d">The default value to compare the value against</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddShort(System.Int32,System.Int16,System.Int32)">
            <summary>
            Adds a Int16 to the Table at index `o` in its vtable using the value `x` and default `d`
            </summary>
            <param name="o">The index into the vtable</param>
            <param name="x">The value to put into the buffer. If the value is equal to the default
            and <see cref="P:FlatBuffers.FlatBufferBuilder.ForceDefaults"/> is false, the value will be skipped.</param>
            <param name="d">The default value to compare the value against</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddUshort(System.Int32,System.UInt16,System.UInt16)">
            <summary>
            Adds a UInt16 to the Table at index `o` in its vtable using the value `x` and default `d`
            </summary>
            <param name="o">The index into the vtable</param>
            <param name="x">The value to put into the buffer. If the value is equal to the default
            and <see cref="P:FlatBuffers.FlatBufferBuilder.ForceDefaults"/> is false, the value will be skipped.</param>
            <param name="d">The default value to compare the value against</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddInt(System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds an Int32 to the Table at index `o` in its vtable using the value `x` and default `d`
            </summary>
            <param name="o">The index into the vtable</param>
            <param name="x">The value to put into the buffer. If the value is equal to the default
            and <see cref="P:FlatBuffers.FlatBufferBuilder.ForceDefaults"/> is false, the value will be skipped.</param>
            <param name="d">The default value to compare the value against</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddUint(System.Int32,System.UInt32,System.UInt32)">
            <summary>
            Adds a UInt32 to the Table at index `o` in its vtable using the value `x` and default `d`
            </summary>
            <param name="o">The index into the vtable</param>
            <param name="x">The value to put into the buffer. If the value is equal to the default
            and <see cref="P:FlatBuffers.FlatBufferBuilder.ForceDefaults"/> is false, the value will be skipped.</param>
            <param name="d">The default value to compare the value against</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddLong(System.Int32,System.Int64,System.Int64)">
            <summary>
            Adds an Int64 to the Table at index `o` in its vtable using the value `x` and default `d`
            </summary>
            <param name="o">The index into the vtable</param>
            <param name="x">The value to put into the buffer. If the value is equal to the default
            and <see cref="P:FlatBuffers.FlatBufferBuilder.ForceDefaults"/> is false, the value will be skipped.</param>
            <param name="d">The default value to compare the value against</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddUlong(System.Int32,System.UInt64,System.UInt64)">
            <summary>
            Adds a UInt64 to the Table at index `o` in its vtable using the value `x` and default `d`
            </summary>
            <param name="o">The index into the vtable</param>
            <param name="x">The value to put into the buffer. If the value is equal to the default
            and <see cref="P:FlatBuffers.FlatBufferBuilder.ForceDefaults"/> is false, the value will be skipped.</param>
            <param name="d">The default value to compare the value against</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddFloat(System.Int32,System.Single,System.Double)">
            <summary>
            Adds a Single to the Table at index `o` in its vtable using the value `x` and default `d`
            </summary>
            <param name="o">The index into the vtable</param>
            <param name="x">The value to put into the buffer. If the value is equal to the default
            and <see cref="P:FlatBuffers.FlatBufferBuilder.ForceDefaults"/> is false, the value will be skipped.</param>
            <param name="d">The default value to compare the value against</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddDouble(System.Int32,System.Double,System.Double)">
            <summary>
            Adds a Double to the Table at index `o` in its vtable using the value `x` and default `d`
            </summary>
            <param name="o">The index into the vtable</param>
            <param name="x">The value to put into the buffer. If the value is equal to the default
            and <see cref="P:FlatBuffers.FlatBufferBuilder.ForceDefaults"/> is false, the value will be skipped.</param>
            <param name="d">The default value to compare the value against</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddOffset(System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a buffer offset to the Table at index `o` in its vtable using the value `x` and default `d`
            </summary>
            <param name="o">The index into the vtable</param>
            <param name="x">The value to put into the buffer. If the value is equal to the default
            and <see cref="P:FlatBuffers.FlatBufferBuilder.ForceDefaults"/> is false, the value will be skipped.</param>
            <param name="d">The default value to compare the value against</param>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.CreateString(System.String)">
            @endcond
            <summary>
            Encode the string `s` in the buffer using UTF-8.
            </summary>
            <param name="s">The string to encode.</param>
            <returns>
            The offset in the buffer where the encoded string starts.
            </returns>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.AddStruct(System.Int32,System.Int32,System.Int32)">
            @cond FLATBUFFERS_INTERNAL
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.Finish(System.Int32)">
            @endcond
            <summary>
            Finalize a buffer, pointing to the given `root_table`.
            </summary>
            <param name="rootTable">
            An offset to be added to the buffer.
            </param>
        </member>
        <member name="P:FlatBuffers.FlatBufferBuilder.DataBuffer">
            <summary>
            Get the ByteBuffer representing the FlatBuffer.
            </summary>
            <remarks>
            This is typically only called after you call `Finish()`.
            The actual data starts at the ByteBuffer's current position,
            not necessarily at `0`.
            </remarks>
            <returns>
            Returns the ByteBuffer for this FlatBuffer.
            </returns>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.SizedByteArray">
            <summary>
            A utility function to copy and return the ByteBuffer data as a
            `byte[]`.
            </summary>
            <returns>
            A full copy of the FlatBuffer data.
            </returns>
        </member>
        <member name="M:FlatBuffers.FlatBufferBuilder.Finish(System.Int32,System.String)">
            <summary>
            Finalize a buffer, pointing to the given `rootTable`.
            </summary>
            <param name="rootTable">
            An offset to be added to the buffer.
            </param>
            <param name="fileIdentifier">
            A FlatBuffer file identifier to be added to the buffer before
            `root_table`.
            </param>
        </member>
        <member name="T:FlatBuffers.Offset`1">
            <summary>
            Offset class for typesafe assignments.
            </summary>
        </member>
        <member name="T:FlatBuffers.Struct">
            <summary>
            All structs in the generated code derive from this class, and add their own accessors.
            </summary>
        </member>
        <member name="T:FlatBuffers.Table">
            <summary>
            All tables in the generated code derive from this class, and add their own accessors.
            </summary>
        </member>
    </members>
</doc>
